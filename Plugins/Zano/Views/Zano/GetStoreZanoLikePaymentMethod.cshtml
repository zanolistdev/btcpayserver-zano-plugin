@using ZanoLikePaymentMethodViewModel = BTCPayServer.Plugins.Zano.Controllers.UIZanoLikeStoreController.ZanoLikePaymentMethodViewModel
@using ZanoLikeSettlementThresholdChoice = BTCPayServer.Plugins.Zano.Controllers.UIZanoLikeStoreController.ZanoLikeSettlementThresholdChoice;
@model ZanoLikePaymentMethodViewModel

@{
    ViewData.SetActivePage(Model.CryptoCode, StringLocalizer["{0} Settings", Model.CryptoCode], Model.CryptoCode);
    Layout = "_Layout";
}

<partial name="_StatusMessage" />

<div class="row">
    <div class="col-md-8">
        @if (!ViewContext.ModelState.IsValid)
        {
            <div asp-validation-summary="All"></div>
        }
        @if (Model.Summary != null)
        {
            <div class="card">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Node available: @Model.Summary.DaemonAvailable</li>
                    <li class="list-group-item">Wallet RPC available: @Model.Summary.WalletAvailable</li>
                    <li class="list-group-item">Last updated: @Model.Summary.UpdatedAt</li>
                    <li class="list-group-item">Synced: @Model.Summary.Synced (@Model.Summary.CurrentHeight / @Model.Summary.TargetHeight)</li>
                </ul>
            </div>
        }

        @if (Model.Summary?.WalletHeight is null or 0)
        {
            <form method="post" asp-action="GetStoreZanoLikePaymentMethod"
                  asp-route-storeId="@Context.GetRouteValue("storeId")"
                  asp-route-cryptoCode="@Context.GetRouteValue("cryptoCode")"
                  class="mt-4">

                <div class="card my-2">
                    <h3 class="card-title p-2">Set View-Only Wallet Details</h3>

                    <div class="form-group p-2">
                        <label asp-for="PrimaryAddress" class="form-label">Wallet Primary Address</label>
                        <input type="text" class="form-control" asp-for="PrimaryAddress" required>
                        <span asp-validation-for="PrimaryAddress" class="text-danger"></span>
                    </div>
                    <div class="form-group p-2">
                        <label asp-for="PrivateViewKey" class="form-label">Wallet Private View Key</label>
                        <input type="text" class="form-control" asp-for="PrivateViewKey" required>
                        <span asp-validation-for="PrivateViewKey" class="text-danger"></span>
                    </div>
                    <div class="form-group p-2">
                        <label asp-for="RestoreHeight" class="form-label">Restore Height (Block Height)</label>
                        <input type="number" class="form-control" asp-for="RestoreHeight" required>
                        <span asp-validation-for="RestoreHeight" class="text-danger"></span>
                    </div>
                    <div class="form-group p-2">
                        <label asp-for="WalletPassword" class="form-label">Wallet Password</label>
                        <input type="password" class="form-control" asp-for="WalletPassword" required>
                        <span asp-validation-for="WalletPassword" class="text-danger"></span>
                    </div>
                    <div class="card-footer text-right">
                        <button name="command" value="set-wallet-details" class="btn btn-secondary" type="submit">Set Wallet Details</button>
                    </div>
                </div>
            </form>
        }
        <form method="post" asp-action="GetStoreZanoLikePaymentMethod"
              asp-route-storeId="@Context.GetRouteValue("storeId")"
              asp-route-cryptoCode="@Context.GetRouteValue("cryptoCode")"
              class="mt-4" enctype="multipart/form-data">

            <input type="hidden" asp-for="CryptoCode"/>
            @if (Model.Summary?.WalletHeight is null or 0)
            {
                <input type="hidden" asp-for="AccountIndex"/>
            }
            else
            {
                <div class="form-group">
                    <label asp-for="AccountIndex" class="control-label"></label>
                    @if (@Model.Accounts != null && Model.Accounts.Any())
                    {
                        <select asp-for="AccountIndex" asp-items="Model.Accounts" class="form-control"></select>
                        <span asp-validation-for="AccountIndex" class="text-danger"></span>
                    }
                    else
                    {
                        <span>No accounts available on the current wallet</span>
                        <input type="hidden" asp-for="AccountIndex"/>
                    }
                </div>
                <div class="form-group">
                    <div class="input-group my-3">
                        <input type="text" class="form-control" placeholder="@StringLocalizer["New account label"]" asp-for="NewAccountLabel">
                        <button name="command" value="add-account" class="input-group-text btn btn-secondary" type="submit">Add account</button>
                    </div>
                </div>
            }

            <div class="form-group">
                <label asp-for="Enabled"></label>
                <input asp-for="Enabled" type="checkbox" class="form-check"/>
                <span asp-validation-for="Enabled" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="SettlementConfirmationThresholdChoice" class="form-label"></label>
                <a href="https://docs.btcpayserver.org/FAQ/Stores/#consider-the-invoice-confirmed-when-the-payment-transaction" target="_blank" rel="noreferrer noopener" title="@StringLocalizer["More information..."]">
                    <vc:icon symbol="info" />
                </a>
                <select
                    asp-for="SettlementConfirmationThresholdChoice"
                    asp-items="Html.GetEnumSelectList<ZanoLikeSettlementThresholdChoice>()"
                    class="form-select w-auto"
                    onchange="
                        document.getElementById('unconfirmed-warning').hidden = this.value !== '@((int)ZanoLikeSettlementThresholdChoice.ZeroConfirmation)';
                        document.getElementById('custom-confirmation-value').hidden = this.value !== '@((int)ZanoLikeSettlementThresholdChoice.Custom)';">
                </select>
                <span asp-validation-for="SettlementConfirmationThresholdChoice" class="text-danger"></span>
                <p class="info-note my-3 text-warning" id="unconfirmed-warning" role="alert" hidden="@(Model.SettlementConfirmationThresholdChoice is not ZanoLikeSettlementThresholdChoice.ZeroConfirmation)">
                    <vc:icon symbol="warning" />
                    <span text-translate="true">Choosing to accept an unconfirmed invoice can lead to double-spending and is strongly discouraged.</span>
                </p>
            </div>

            <div class="form-group" id="custom-confirmation-value" hidden="@(Model.SettlementConfirmationThresholdChoice is not ZanoLikeSettlementThresholdChoice.Custom)">
                <label asp-for="CustomSettlementConfirmationThreshold" class="form-label"></label>
                <input
                    asp-for="CustomSettlementConfirmationThreshold"
                    type="number"
                    value="@(Model.CustomSettlementConfirmationThreshold)"
                    class="form-control w-auto"
                    min="0"
                    max="100"
                    pattern="\d+"
                />
                <span asp-validation-for="CustomSettlementConfirmationThreshold" class="text-danger"></span>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary" id="SaveButton">Save</button>

                <a class="btn btn-secondary" asp-action="GetStoreZanoLikePaymentMethods"
                   asp-route-storeId="@Context.GetRouteValue("storeId")"
                   asp-route-cryptoCode="@Context.GetRouteValue("cryptoCode")"
                   asp-controller="UIZanoLikeStore">
                    Back to list
                </a>
            </div>
        </form>
    </div>
</div>

@section PageFootContent {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
